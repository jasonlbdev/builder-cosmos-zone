// User Accounts Types
export interface UserAccount {
  id: string;
  platform: string;
  type: "email" | "phone" | "username";
  address: string;
  displayName: string;
  isDefault: boolean;
  isActive: boolean;
  avatar?: string;
}

// Email Types
export interface EmailParticipant {
  email: string;
  name: string;
  avatar: string;
  type: "external" | "internal";
  domain?: string;
}

export interface Email {
  id: string;
  sender: string;
  email: string;
  subject: string;
  content: string;
  preview: string;
  time: string;
  unread: boolean;
  important: boolean;
  category: string;
  categoryColor: string;
  avatar: string;
  labels?: string[];
  platform?: string;
  platformLogo?: string;
  platformColor?: string;
  threadId?: string;
  parentId?: string;
  conversationType?: "external" | "internal" | "mixed";
  participants?: EmailParticipant[];
  threadPosition?: number;
  hasReplies?: boolean;
  isThreadHead?: boolean;
  forkPoint?: boolean;
}

// Task Types
export interface Task {
  id: string;
  title: string;
  description?: string;
  status: "todo" | "in-progress" | "completed";
  priority: "low" | "medium" | "high" | "urgent";
  assignee?: string;
  assignees?: string[];
  dueDate?: Date;
  tags: string[];
  emailContext?: {
    messageId: string;
    sender: string;
    subject: string;
    platform: string;
    platformLogo: string;
  };
  followUpConfig?: {
    enabled: boolean;
    timeframe: number;
    message: string;
    recipients: string[];
  };
  createdAt: Date;
  updatedAt: Date;
}

// Calendar Types
export interface CalendarEvent {
  id: string;
  title: string;
  description?: string;
  start: Date;
  end: Date;
  allDay?: boolean;
  category: "meeting" | "deadline" | "reminder" | "personal" | "work";
  attendees?: string[];
  location?: string;
  recurring?: boolean;
  priority: "low" | "medium" | "high";
  emailContext?: {
    messageId: string;
    sender: string;
    subject: string;
  };
}

// Category Types
export interface CategoryRule {
  id: string;
  type: "sender" | "subject" | "content" | "metadata";
  condition: "contains" | "equals" | "starts_with" | "ends_with" | "regex";
  value: string;
  enabled: boolean;
}

export interface EmailCategory {
  id: string;
  name: string;
  description: string;
  color: string;
  rules: CategoryRule[];
  enabled: boolean;
}

// Conversation Types
export interface ConversationMessage {
  id: string;
  platform: string;
  sender: string;
  content: string;
  timestamp: Date;
  type: "text" | "image" | "file" | "voice";
  status: "sent" | "delivered" | "read";
  avatar: string;
}

// Integration Types
export interface Integration {
  id: string;
  name: string;
  platform: string;
  connected: boolean;
  status: "connected" | "disconnected" | "error";
  lastSync: Date;
  account: string;
}

// CRM Types
export interface CRMContact {
  name: string;
  company: string;
  status: "lead" | "prospect" | "customer" | "partner";
  leadScore: number;
  lastInteraction: string;
  tags: string[];
}

// Extracted Task Types
export interface ExtractedTask {
  id: string;
  title: string;
  description?: string;
  priority: "low" | "medium" | "high" | "urgent";
  dueDate?: Date;
  assignees: string[];
  tags: string[];
  confidence: number;
  source: {
    emailId: string;
    emailSubject: string;
    extractedFrom: string;
    context: string;
  };
  actionType: "deadline" | "meeting" | "follow_up" | "request";
  estimated_duration: string;
  autoGenerated: boolean;
}

// Security Types
export interface SecurityThreat {
  id: string;
  type: "phishing" | "malware" | "spam" | "suspicious";
  severity: "low" | "medium" | "high" | "critical";
  description: string;
  indicators: string[];
  recommendations: string[];
  detectionTime: Date;
  status: "active" | "resolved" | "investigating";
}

// Email Context for task extraction
export interface EmailContext {
  id: string;
  subject: string;
  content: string;
  sender: string;
  recipients: string[];
  timestamp: string;
}
